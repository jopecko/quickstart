name: release-branch

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: Dry run
        type: boolean

#permissions:
#  id-token: write

env:
  branch: release-candidate

jobs:
#  create-release-branch:
#    runs-on: ubuntu-latest
#    if: ${{ !inputs.dry-run }}
#    outputs:
#      created: ${{ steps.create.outputs.created }}
#    steps:
#      - uses: peterjgrainger/action-create-branch@v3.0.0
#        id: create
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          branch: ${{ env.branch }}
#          sha: '${{ github.sha }}'

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new-release-published: ${{ steps.semantic.outputs.new_release_published }}
      new-release-version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - run: sleep 30s
      - uses: actions/checkout@v4
        with:
          #ref: ${{ env.branch }}
          fetch-depth: 0
      - uses: cycjimmy/semantic-release-action@v4
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 24
          dry_run: ${{ inputs.dry-run }}
          extra_plugins: |
            conventional-changelog-conventionalcommits

      - name: Do something when a new release published
        #if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo "${{ steps.semantic.outputs.new_release_published }}"
          echo "${{ steps.semantic.outputs.new_release_version }}"

#  delete-release-branch:
#    if: ${{ always() }}
#    runs-on: ubuntu-latest
#    needs:
#      - create-release-branch
#      - release
#    steps:
#      - run: git push origin :${{ env.branch }}
